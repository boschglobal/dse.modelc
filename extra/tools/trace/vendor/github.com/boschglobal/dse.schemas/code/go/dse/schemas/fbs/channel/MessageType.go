// Code generated by the FlatBuffers compiler. DO NOT EDIT.

package channel

import "strconv"

/// All messages for this Channel are multiplexed onto the MessageType union.
type MessageType byte

const (
	MessageTypeNONE          MessageType = 0
	MessageTypeSignalIndex   MessageType = 1
	MessageTypeSignalWrite   MessageType = 2
	MessageTypeSignalRead    MessageType = 3
	MessageTypeSignalValue   MessageType = 4
	MessageTypeModelRegister MessageType = 5
	MessageTypeModelReady    MessageType = 6
	MessageTypeModelStart    MessageType = 7
	MessageTypeModelExit     MessageType = 8
)

var EnumNamesMessageType = map[MessageType]string{
	MessageTypeNONE:          "NONE",
	MessageTypeSignalIndex:   "SignalIndex",
	MessageTypeSignalWrite:   "SignalWrite",
	MessageTypeSignalRead:    "SignalRead",
	MessageTypeSignalValue:   "SignalValue",
	MessageTypeModelRegister: "ModelRegister",
	MessageTypeModelReady:    "ModelReady",
	MessageTypeModelStart:    "ModelStart",
	MessageTypeModelExit:     "ModelExit",
}

var EnumValuesMessageType = map[string]MessageType{
	"NONE":          MessageTypeNONE,
	"SignalIndex":   MessageTypeSignalIndex,
	"SignalWrite":   MessageTypeSignalWrite,
	"SignalRead":    MessageTypeSignalRead,
	"SignalValue":   MessageTypeSignalValue,
	"ModelRegister": MessageTypeModelRegister,
	"ModelReady":    MessageTypeModelReady,
	"ModelStart":    MessageTypeModelStart,
	"ModelExit":     MessageTypeModelExit,
}

func (v MessageType) String() string {
	if s, ok := EnumNamesMessageType[v]; ok {
		return s
	}
	return "MessageType(" + strconv.FormatInt(int64(v), 10) + ")"
}
